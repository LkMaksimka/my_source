
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
    СтандартнаяОбработка = Ложь;
    
    // 1. Добавляем ИсточникДанных
    ИсточникДанных = СхемаКомпоновкиДанных.ИсточникиДанных.Добавить();
    ИсточникДанных.Имя = "ИсточникДанных1";
    ИсточникДанных.ТипИсточникаДанных = "Local";
    
    НаборДанныхОбъектСКД = СхемаКомпоновкиДанных.НаборыДанных.Добавить(Тип("НаборДанныхОбъектСхемыКомпоновкиДанных"));
    НаборДанныхОбъектСКД.Имя = "НаборДанных1";
    НаборДанныхОбъектСКД.ИмяОбъекта = "ТаблицаОстатков";
    НаборДанныхОбъектСКД.ИсточникДанных = "ИсточникДанных1";
    
    // 2. Добавляем поля набора данных
    ПолеНаборДанныхСхемыСКД = НаборДанныхОбъектСКД.Поля.Добавить(Тип("ПолеНабораДанныхСхемыКомпоновкиДанных"));    
    ПолеНаборДанныхСхемыСКД.Поле = "Номенклатура";
    ПолеНаборДанныхСхемыСКД.ПутьКДанным = "Номенклатура";
    ПолеНаборДанныхСхемыСКД.Заголовок = "Номенклатура";
    
    ПолеНаборДанныхСхемыСКД = НаборДанныхОбъектСКД.Поля.Добавить(Тип("ПолеНабораДанныхСхемыКомпоновкиДанных"));
    ПолеНаборДанныхСхемыСКД.Поле = "Склад";
    ПолеНаборДанныхСхемыСКД.ПутьКДанным = "Склад";
    ПолеНаборДанныхСхемыСКД.Заголовок = "Склад";
    
    ПолеНаборДанныхСхемыСКД = НаборДанныхОбъектСКД.Поля.Добавить(Тип("ПолеНабораДанныхСхемыКомпоновкиДанных"));
    ПолеНаборДанныхСхемыСКД.Поле = "ВНаличииОстаток";
    ПолеНаборДанныхСхемыСКД.ПутьКДанным = "ВНаличииОстаток";
    ПолеНаборДанныхСхемыСКД.Заголовок = "Остаток в наличии";
    
    // 3. Добавляем ресурсы
    Ресурс = СхемаКомпоновкиДанных.ПоляИтога.Добавить();
	Ресурс.ПутьКДанным = "ВНаличииОстаток";
	Ресурс.Выражение = "Сумма(ВНаличииОстаток)";
    
       
    НастройкиКомпоновки = КомпоновщикНастроек.Настройки;
    
    Если НастройкиКомпоновки.Структура.Количество() = 0 Тогда
        // 4. Добавляем группировки данных
        ГруппировкаКомпоновкиДанных1 = НастройкиКомпоновки.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
        ГруппировкаКомпоновкиДанных1.Использование = Истина;
        ПолеГруппировкиКомпоновкиДанных = ГруппировкаКомпоновкиДанных1.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
        ПолеГруппировкиКомпоновкиДанных.Использование = Истина;
        ПолеГруппировкиКомпоновкиДанных.Поле = Новый ПолеКомпоновкиДанных("Склад");
        
        // 5. Добавляем авто поля в группировки.
        АвтоВыбранноеПолеКомпоновкиДанных = ГруппировкаКомпоновкиДанных1.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
		АвтоВыбранноеПолеКомпоновкиДанных.Использование = Истина;
        
        ГруппировкаКомпоновкиДанных2 = ГруппировкаКомпоновкиДанных1.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
        ГруппировкаКомпоновкиДанных2.Использование = Истина;
        ПолеГруппировкиКомпоновкиДанных = ГруппировкаКомпоновкиДанных2.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
        ПолеГруппировкиКомпоновкиДанных.Использование = Истина;
        ПолеГруппировкиКомпоновкиДанных.Поле = Новый ПолеКомпоновкиДанных("Номенклатура");
        
        АвтоВыбранноеПолеКомпоновкиДанных = ГруппировкаКомпоновкиДанных2.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
		АвтоВыбранноеПолеКомпоновкиДанных.Использование = Истина;
        
        // 6. Добавляем выбранные поля
        ВыбранноеПолеКомпановкиДанных = НастройкиКомпоновки.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
        ВыбранноеПолеКомпановкиДанных.Использование = Истина;
        ВыбранноеПолеКомпановкиДанных.Поле = Новый ПолеКомпоновкиДанных("ВНаличииОстаток");
        
        // 7. Добавляем отбор
        ЭлементОтбораКомпановкиДанных = НастройкиКомпоновки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
        ЭлементОтбораКомпановкиДанных.Использование = Истина;
        ЭлементОтбораКомпановкиДанных.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВНаличииОстаток");
        ЭлементОтбораКомпановкиДанных.ВидСравнения = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
        ЭлементОтбораКомпановкиДанных.ПравоеЗначение = 500;
        
        // 8. Добавляем сортировку
        ЭлементПорядкаКомпоновкиДанных = НастройкиКомпоновки.Порядок.Элементы.Добавить(Тип("ЭлементПорядкаКомпоновкиДанных"));
        ЭлементПорядкаКомпоновкиДанных.Использование = Истина;
        ЭлементПорядкаКомпоновкиДанных.Поле = Новый ПолеКомпоновкиДанных("Номенклатура");
        ЭлементПорядкаКомпоновкиДанных.ТипУпорядочивания = НаправлениеСортировкиКомпоновкиДанных.Возр;
        
        // 9. Добавляем оформление (Выделять желтым поля ВНаличииОстаток и Номенклатура, если ВНаличииОстаток > 1000).
        УсловноеОформление = НастройкиКомпоновки.УсловноеОформление.Элементы.Добавить();
        УсловноеОформление.Использование = Истина;
        ВыбранноеПолеКомпоновкиДанных = УсловноеОформление.Поля.Элементы.Добавить();
        ВыбранноеПолеКомпоновкиДанных.Использование = Истина;
        ВыбранноеПолеКомпоновкиДанных.Поле = Новый ПолеКомпоновкиДанных("ВНаличииОстаток");
        
        ВыбранноеПолеКомпоновкиДанных = УсловноеОформление.Поля.Элементы.Добавить();
        ВыбранноеПолеКомпоновкиДанных.Использование = Истина;
        ВыбранноеПолеКомпоновкиДанных.Поле = Новый ПолеКомпоновкиДанных("Номенклатура");
        
        УсловноеОформление.ИспользоватьВЗаголовке 		= ИспользованиеУсловногоОформленияКомпоновкиДанных.НеИспользовать;
        УсловноеОформление.ИспользоватьВЗаголовкеПолей  = ИспользованиеУсловногоОформленияКомпоновкиДанных.НеИспользовать;
        УсловноеОформление.ИспользоватьВОбщемИтоге 		= ИспользованиеУсловногоОформленияКомпоновкиДанных.НеИспользовать;
        
        ЭлементОтбораКомпоновкиДанных = УсловноеОформление.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
        ЭлементОтбораКомпоновкиДанных.Использование = Истина;
        ЭлементОтбораКомпоновкиДанных.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВНаличииОстаток");
        ЭлементОтбораКомпоновкиДанных.ВидСравнения = ВидСравненияКомпоновкиДанных.Больше;
        ЭлементОтбораКомпоновкиДанных.ПравоеЗначение = 1000;
        
        УсловноеОформление.Оформление.УстановитьЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ЦветФона"), WebЦвета.Желтый);
        
    КонецЕсли; 
    
    КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
    МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиКомпоновки);
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |   ТоварыНаСкладахОстатки.Склад КАК Склад,
    |   ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
    |   ТоварыНаСкладахОстатки.ВНаличииОстаток КАК ВНаличииОстаток
    |ИЗ
    |   РегистрНакопления.ТоварыНаСкладах.Остатки КАК ТоварыНаСкладахОстатки";
    
    РезультатЗапроса = Запрос.Выполнить().Выгрузить();
    
    ВнешниеНаборы = Новый Структура("ТаблицаОстатков", РезультатЗапроса);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборы);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
    
КонецПроцедуры
