#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
    Если ИсточникВыбора.ИмяФормы = "Обработка.тн_МассовоеПеремещениеОС.Форма.ФормаЗаполнения" Тогда
        ТаблицаОС = ВыбранноеЗначение.ТаблицаОС;
        Для каждого Строка Из ТаблицаОС Цикл
            НовСтр = Таблица.Добавить();
            НовСтр.ИнвентарныйНомерОС = Строка.ИнвНомер;
            НовСтр.ОсновноеСредство = Строка.ОсновноеСредство;
        КонецЦикла; 
    КонецЕсли; 
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблица

&НаКлиенте
Процедура ТаблицаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
    
    Если ВыбранноеЗначение.Количество() = 1 Тогда
        ДобавитьСтрокиТаблицы(Элемент.ТекущиеДанные, ВыбранноеЗначение[0]);
    ИначеЕсли ВыбранноеЗначение.Количество() > 0 Тогда 
        Для каждого ЭлементМассива Из ВыбранноеЗначение Цикл
            Отбор = Новый Структура;
            Отбор.Вставить("ОсновноеСредство", ЭлементМассива.ОсновноеСредство);
            Отбор.Вставить("ПодразделениеСдатчик", ЭлементМассива.Подразделение);
            Отбор.Вставить("МОЛСдатчик", ЭлементМассива.МОЛ);
            НайденыСтроки = Таблица.НайтиСтроки(Отбор);
            
            Если НайденыСтроки.Количество() = 0 Тогда
                НоваяСтрока = Таблица.Добавить();
                ДобавитьСтрокиТаблицы(НоваяСтрока, ЭлементМассива);
            КонецЕсли;
            
        КонецЦикла;
    Иначе
        Сообщение = Новый СообщениеПользователю;
        Сообщение.Текст = "Нет выбранных данных.";
        Сообщение.Сообщить();
    КонецЕсли; 
    
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаАдресПолучательНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
    
  	СтандартнаяОбработка = Ложь;
    ВидКонтактнойИнформации = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ПочтовыйАдресОрганизации");
    ТекСтрока = Элементы.Таблица.ТекущиеДанные;
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("ВидКонтактнойИнформации",ВидКонтактнойИнформации); 
                                    
	ПараметрыОткрытияФормы.Вставить("Заголовок", нСтр("ru='Адрес'", "ru"));
	ПараметрыОткрытияФормы.Вставить("ЗначенияПолей", ТекСтрока.АдресПолучательЗначение);
	ПараметрыОткрытияФормы.Вставить("Представление", ТекСтрока.АдресПолучатель);
	
	Оповещение = Новый ОписаниеОповещения("АдресаДоставкиНачалоВыбораЗавершение", ЭтотОбъект, Новый Структура);
	Оповещение.ДополнительныеПараметры.Вставить("ТекСтрока",  ТекСтрока);
	
	УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуКонтактнойИнформации(ПараметрыОткрытияФормы, , Оповещение);

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаОсновноеСредствоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
    СтандартнаяОбработка = Ложь;
    ОткрытьПодборОС(Ложь);
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подобрать(Команда)
   ОткрытьПодборОС(Истина);
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
    ОткрытьФорму("Обработка.тн_МассовоеПеремещениеОС.Форма.ФормаЗаполнения", 
                Новый Структура, 
                ЭтаФорма,
                УникальныйИдентификатор);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументы(Команда)
    Для Каждого Строка Из Таблица Цикл
        
        ЗаполненыНужныеПоля = ОбязательныеПоляЗаполнены(Строка);                  
                            
        Если НЕ ЗаполненыНужныеПоля Тогда
            Сообщение = Новый СообщениеПользователю;
            Сообщение.Текст = "НЕ все поля заполнены";
            Сообщение.Сообщить();
            Возврат;
        КонецЕсли; 
    КонецЦикла;
    
    СоздатьДокументыНаСервере();
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура АдресаДоставкиНачалоВыбораЗавершение(Знач РезультатЗакрытия, Знач ДополнительныеПараметры) Экспорт
	Если РезультатЗакрытия <> Неопределено Тогда
		ТекСтрока = ДополнительныеПараметры.ТекСтрока;
		ТекСтрока.АдресПолучательЗначение = РезультатЗакрытия.Значение;
		ТекСтрока.АдресПолучатель = РезультатЗакрытия.Представление;
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура СоздатьДокументыНаСервере()
    ДокОбъект = Неопределено;
    Для каждого Строка Из Таблица Цикл
        НуженНовыйДокумент = СравнитьПоля(ДокОбъект, Строка);
        Если НуженНовыйДокумент Тогда
            Если ДокОбъект <> Неопределено Тогда
                ЗаписатьДокумент(ДокОбъект);
            КонецЕсли; 
        	ДокОбъект = Документы.ПеремещениеОС2_4.СоздатьДокумент();
            ДокОбъект.Дата = ТекущаяДатаСеанса();
            ДокОбъект.Организация = Организация;
            ДокОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеОС;
            ДокОбъект.Ответственный = Пользователи.ТекущийПользователь();
            ДокОбъект.Подразделение =  Строка.ПодразделениеСдатчик;
            ДокОбъект.МОЛ =  Строка.МОЛСдатчик;
            ДокОбъект.ПодразделениеПолучатель =  Строка.ПодразделениеПолучатель;
            ДокОбъект.МОЛПолучатель =  Строка.МОЛПолучатель;
            ДокОбъект.НачислениеАмортизации =  Строка.НачислениеАмортизации;
            ДокОбъект.СтатьяРасходов =  Строка.СтатьяРасходов;
            ДокОбъект.АналитикаРасходов =  Строка.АналитикаРасходов;
            ДокОбъект.ИзменяетсяОтражениеРасходовПоНалогу =  Строка.ИзменяетсяОтражениеРасходовПоНалогу;
            ДокОбъект.СтатьяРасходовНалог =  Строка.СтатьяРасходовНалог;
            ДокОбъект.АналитикаРасходовНалог =  Строка.АналитикаРасходовНалог;
            ДокОбъект.АдресМестонахожденияПолучателя =  Строка.АдресПолучатель;
            ДокОбъект.АдресМестонахожденияПолучателяЗначение =  Строка.АдресПолучательЗначение ;
            
        КонецЕсли; 
         НовСтр = ДокОбъект.ОС.Добавить();
         НовСтр.ОсновноеСредство =  Строка.ОсновноеСредство;
         
    КонецЦикла; 
    
    Если ДокОбъект <> Неопределено Тогда
         ЗаписатьДокумент(ДокОбъект);
    КонецЕсли; 

КонецПроцедуры

&НаСервере
Функция СравнитьПоля(ДокОбъект, Строка)
    Если ДокОбъект = Неопределено Тогда
    	 НуженНовыйДокумент = Истина;
     Иначе
         НуженНовыйДокумент = НЕ (ДокОбъект.Подразделение =  Строка.ПодразделениеСдатчик
                          И ДокОбъект.МОЛ =  Строка.МОЛСдатчик
                          И ДокОбъект.ПодразделениеПолучатель =  Строка.ПодразделениеПолучатель
                          И ДокОбъект.МОЛПолучатель =  Строка.МОЛПолучатель
                          И ДокОбъект.НачислениеАмортизации =  Строка.НачислениеАмортизации
                          И ДокОбъект.СтатьяРасходов =  Строка.СтатьяРасходов
                          И ДокОбъект.АналитикаРасходов =  Строка.АналитикаРасходов
                          И ДокОбъект.ИзменяетсяОтражениеРасходовПоНалогу =  Строка.ИзменяетсяОтражениеРасходовПоНалогу
                          И ДокОбъект.СтатьяРасходовНалог =  Строка.СтатьяРасходовНалог
                          И ДокОбъект.АналитикаРасходовНалог =  Строка.АналитикаРасходовНалог);

    КонецЕсли; 
    
    Возврат НуженНовыйДокумент;
КонецФункции 

&НаСервере
Процедура ЗаписатьДокумент(ДокОбъект)
    Попытка
        ДокОбъект.Заполнить(Неопределено);
        ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);  
    Исключение
        ДокОбъект.Записать(РежимЗаписиДокумента.Запись);  
        ТекстСообщения = ОписаниеОшибки();
        Сообщение = Новый СообщениеПользователю;
        Сообщение.Текст = ТекстСообщения;
        Сообщение.Сообщить();
    КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСтрокиТаблицы(НоваяСтрока, ЭлементМассива)
        НоваяСтрока.ОсновноеСредство = ЭлементМассива.ОсновноеСредство;
        НоваяСтрока.ПодразделениеСдатчик = ЭлементМассива.Подразделение;
        НоваяСтрока.МОЛСдатчик = ЭлементМассива.МОЛ;
        НоваяСтрока.ЛицензионныйУчастокСдатчик = ЭлементМассива.ЛицензионныйУчасток;
        НоваяСтрока.НомерСкважиныСдатчик = ЭлементМассива.НомерСкважены;
        НоваяСтрока.СтатьяРасходов = ЭлементМассива.СтатьяРасходовАМ;
        НоваяСтрока.СтатьяРасходовНалог = ЭлементМассива.СтатьяРасходовНУ;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПодборОС(МножественныйВыбор)
    
   ПараметрыФормы = Новый Структура;
   ПараметрыФормы.Вставить("Дата", Дата);
   ПараметрыФормы.Вставить("Организация", Организация);
   ПараметрыФормы.Вставить("МножественныйВыбор", МножественныйВыбор);
   
   ОткрытьФорму("Обработка.тн_МассовоеПеремещениеОС.Форма.ФормаПодбора", 
					ПараметрыФормы, Элементы.Таблица, , , , , 
					РежимОткрытияОкнаФормы.БлокироватьОкноВладельца)

                КонецПроцедуры
                
&НаКлиенте
Функция ОбязательныеПоляЗаполнены(Строка)
    НужноЗаполнитьАналитикуРасходов = ?(ЗначениеЗаполнено(Строка.СтатьяРасходов), 
                                        ЗначениеЗаполнено(Строка.АналитикаРасходов),
                                        Истина);
    НужноЗаполнитьАналитикуРасходовНалог = ?(ЗначениеЗаполнено(Строка.СтатьяРасходовНалог),
                                            ЗначениеЗаполнено(Строка.АналитикаРасходовНалог),
                                            Истина);

    ЗаполненыНужныеПоля = ЗначениеЗаполнено(Строка.ОсновноеСредство)
                        И ЗначениеЗаполнено(Строка.ПодразделениеПолучатель)
                        И ЗначениеЗаполнено(Строка.МОЛПолучатель)
                        И НужноЗаполнитьАналитикуРасходов
                        И НужноЗаполнитьАналитикуРасходовНалог; 
                        
    Возврат  ЗаполненыНужныеПоля;
КонецФункции
#КонецОбласти

