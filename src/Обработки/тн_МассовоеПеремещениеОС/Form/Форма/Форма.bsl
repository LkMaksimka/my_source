#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    Дата = ТекущаяДатаСеанса();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
    Если ИсточникВыбора.ИмяФормы = "Обработка.тн_МассовоеПеремещениеОС.Форма.ФормаЗаполнения" Тогда
        ТаблицаОС = ВыбранноеЗначение.ТаблицаОС;
        Для каждого Строка Из ТаблицаОС Цикл
            НоваяСтрока = Таблица.Добавить();
            ЗаполнениеСтрокиТаблицы(НоваяСтрока, Строка);
        КонецЦикла;
        НеНайденныеКоды = ВыбранноеЗначение.НеНайденныеКоды;
        Для каждого Элемент Из НеНайденныеКоды Цикл
        	ТекстСообщения = НСтр("ru = 'Для Кода ""%1"" не найдено Основное средство !'");
            ТекстСообщения = СтрШаблон(ТекстСообщения, Элемент);
            Сообщение = Новый СообщениеПользователю;
            Сообщение.Текст = ТекстСообщения;
            Сообщение.Сообщить();            
        КонецЦикла; 
    КонецЕсли; 
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура АдресНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
    ЗаполнитьАдрес(АдресЗначение, Адрес, 
                    "АдресаНачалоВыбораЗавершение", Новый Соответствие);
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПолучательПриИзменении(Элемент)
   КодБЕПолучателя = ПолучитьКодБЕ_Подразделения(ПодразделениеПолучатель);
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблица

&НаКлиенте
Процедура ТаблицаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
    
    Если ВыбранноеЗначение.Количество() = 1 Тогда
        Если Элемент.ТекущиеДанные = Неопределено Тогда
            НоваяСтрока = Таблица.Добавить();
        Иначе
            НоваяСтрока = Элемент.ТекущиеДанные;
        КонецЕсли; 

        ЗаполнениеСтрокиТаблицы(НоваяСтрока, ВыбранноеЗначение[0]);
        
    ИначеЕсли ВыбранноеЗначение.Количество() > 1 Тогда 
        Для каждого ЭлементМассива Из ВыбранноеЗначение Цикл
            Отбор = Новый Структура;
            Отбор.Вставить("ОсновноеСредство", ЭлементМассива.ОсновноеСредство);
            Отбор.Вставить("ПодразделениеСдатчик", ЭлементМассива.ПодразделениеСдатчик);
            Отбор.Вставить("МОЛСдатчик", ЭлементМассива.МОЛСдатчик);
            НайденыСтроки = Таблица.НайтиСтроки(Отбор);
            
            Если НайденыСтроки.Количество() = 0 Тогда
                НоваяСтрока = Таблица.Добавить();
                ЗаполнениеСтрокиТаблицы(НоваяСтрока, ЭлементМассива);
            КонецЕсли;
            
        КонецЦикла;
    Иначе
        Сообщение = Новый СообщениеПользователю;
        Сообщение.Текст = НСтр("ru='Нет выбранных данных.'");
        Сообщение.Сообщить();
    КонецЕсли; 
    
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаАдресПолучательНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
    СтандартнаяОбработка = Ложь;
    ТекСтрока = Элементы.Таблица.ТекущиеДанные;

    ДополнительныеПараметры = Новый Соответствие;
    ДополнительныеПараметры.Вставить("ТекСтрока",  ТекСтрока);
   	ЗаполнитьАдрес(ТекСтрока.АдресПолучательЗначение, ТекСтрока.АдресПолучатель, 
                    "АдресаДоставкиНачалоВыбораЗавершение", ДополнительныеПараметры);
  	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаОсновноеСредствоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
    СтандартнаяОбработка = Ложь;
    ОткрытьПодборОС(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПодразделениеПолучательПриИзменении(Элемент)
    ТекДанные = Элементы.Таблица.ТекущиеДанные;
    Если ТекДанные <> Неопределено Тогда
        КодБЕ_Получатель = ПолучитьКодБЕ_Подразделения(ТекДанные.ПодразделениеПолучатель);
        ТекДанные.КодБЕ_ПодразделениеПолучатель = КодБЕ_Получатель;
    КонецЕсли; 
    
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подобрать(Команда)
    ОткрытьПодборОС(Истина);
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
   ПараметрыФормы = Новый Структура;
   ПараметрыФормы.Вставить("Дата", КонецДня(Дата));
   ПараметрыФормы.Вставить("Организация", Организация);
   
   ОткрытьФорму("Обработка.тн_МассовоеПеремещениеОС.Форма.ФормаЗаполнения", 
                ПараметрыФормы, 
                ЭтаФорма,
                УникальныйИдентификатор);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументы(Команда)
    Для Каждого Строка Из Таблица Цикл
        
        ЗаполненыНужныеПоля = ОбязательныеПоляЗаполнены(Строка);                  
                            
        Если НЕ ЗаполненыНужныеПоля Тогда
            Сообщение = Новый СообщениеПользователю;
            Сообщение.Текст = НСтр("ru='НЕ все поля заполнены'");
            Сообщение.Сообщить();
            Возврат;
        КонецЕсли;
        
    КонецЦикла;
    
    ОС_с_Документами = СоздатьДокументыНаСервере(Таблица, Организация);
    Для каждого Элемент Из ОС_с_Документами Цикл
        
        ТекстСообщения = НСтр("ru = 'Для Основного средства %1 по подразделению сдатчик %2
                             |и подразделению получатель %3, документы уже созданы.'");
        ТекстСообщения = СтрШаблон(ТекстСообщения, Элемент.ОС, Элемент.Подразделение, Элемент.ПодразделениеПолучатель);
        
        Сообщение = Новый СообщениеПользователю;
        Сообщение.Текст = ТекстСообщения;
        Сообщение.Сообщить();
    КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКСпискуДокументов(Команда)
    
    ПараметрыФормы = Новый Структура;
    ПараметрыФормы.Вставить("тн_Ответственный", ПолучитьТекущегоПользователя());
    ПараметрыФормы.Вставить("тн_Дата", Дата);
    
    Форма = ОткрытьФорму("Документ.ПеремещениеОС2_4.ФормаСписка", ПараметрыФормы);
    Форма.Открыть();
    
КонецПроцедуры



#КонецОбласти



#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура АдресаДоставкиНачалоВыбораЗавершение(Знач РезультатЗакрытия, Знач ДополнительныеПараметры) Экспорт
	Если РезультатЗакрытия <> Неопределено Тогда
		ТекСтрока = ДополнительныеПараметры.ТекСтрока;
		ТекСтрока.АдресПолучательЗначение = РезультатЗакрытия.Значение;
		ТекСтрока.АдресПолучатель = РезультатЗакрытия.Представление;
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура АдресаНачалоВыбораЗавершение(Знач РезультатЗакрытия, Знач ДополнительныеПараметры) Экспорт
	Если РезультатЗакрытия <> Неопределено Тогда
		АдресЗначение = РезультатЗакрытия.Значение;
		Адрес = РезультатЗакрытия.Представление;
	КонецЕсли; 
КонецПроцедуры


&НаСервереБезКонтекста
Функция СоздатьДокументыНаСервере(Знач Таблица, Знач Организация)
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   &Организация КАК Организация,
        |   тч.ОсновноеСредство КАК ОсновноеСредство,
        |   тч.ПодразделениеСдатчик КАК ПодразделениеОтправитель,
        |   тч.МОЛСдатчик КАК МОЛСдатчик,
        |   тч.МОЛПолучатель КАК МОЛПолучатель,
        |   тч.ПодразделениеПолучатель КАК ПодразделениеПолучатель,
        |   тч.АдресПолучатель КАК АдресПолучатель,
        |   тч.АдресПолучательЗначение КАК АдресПолучательЗначение,
        |   тч.НачислениеАмортизации КАК НачислениеАмортизации,
        |   тч.СтатьяРасходов КАК СтатьяРасходов,
        |   тч.АналитикаРасходов КАК АналитикаРасходов,
        |   тч.ИзменяетсяОтражениеРасходовПоНалогу КАК ИзменяетсяОтражениеРасходовПоНалогу,
        |   тч.СтатьяРасходовНалог КАК СтатьяРасходовНалог,
        |   тч.АналитикаРасходовНалог КАК АналитикаРасходовНалог
        |ПОМЕСТИТЬ ВТ_Тч
        |ИЗ
        |   &тч КАК тч
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |   ПеремещениеОС2_4ОС.ОсновноеСредство КАК ОсновноеСредство,
        |   ПеремещениеОС2_4ОС.Ссылка.Организация КАК Организация,
        |   ПеремещениеОС2_4ОС.Ссылка.Подразделение КАК Подразделение,
        |   ПеремещениеОС2_4ОС.Ссылка.ПодразделениеПолучатель КАК ПодразделениеПолучатель,
        |   ПеремещениеОС2_4ОС.Ссылка КАК Ссылка
        |ПОМЕСТИТЬ ВТ_Док
        |ИЗ
        |   Документ.ПеремещениеОС2_4.ОС КАК ПеремещениеОС2_4ОС
        |ГДЕ
        |   ПеремещениеОС2_4ОС.Ссылка.Проведен
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |   ВТ_Тч.Организация КАК Организация,
        |   ВТ_Тч.ОсновноеСредство КАК ОсновноеСредство,
        |   ВТ_Тч.ПодразделениеОтправитель КАК Подразделение,
        |   ВТ_Тч.ПодразделениеПолучатель КАК ПодразделениеПолучатель,
        |   КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_Док.Ссылка) КАК ДокументПеремещения,
        |   ВТ_Тч.МОЛСдатчик КАК МОЛ,
        |   ВТ_Тч.МОЛПолучатель КАК МОЛПолучатель,
        |   ВТ_Тч.НачислениеАмортизации КАК НачислениеАмортизации,
        |   ВТ_Тч.СтатьяРасходов КАК СтатьяРасходов,
        |   ВТ_Тч.АналитикаРасходов КАК АналитикаРасходов,
        |   ВТ_Тч.ИзменяетсяОтражениеРасходовПоНалогу КАК ИзменяетсяОтражениеРасходовПоНалогу,
        |   ВТ_Тч.СтатьяРасходовНалог КАК СтатьяРасходовНалог,
        |   ВТ_Тч.АналитикаРасходовНалог КАК АналитикаРасходовНалог,
        |   ВТ_Тч.АдресПолучатель КАК АдресПолучатель
        |ПОМЕСТИТЬ ВТ_СгрупированныеДанные
        |ИЗ
        |   ВТ_Тч КАК ВТ_Тч
        |       ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Док КАК ВТ_Док
        |       ПО ВТ_Тч.Организация = ВТ_Док.Организация
        |           И ВТ_Тч.ОсновноеСредство = ВТ_Док.ОсновноеСредство
        |           И ВТ_Тч.ПодразделениеОтправитель = ВТ_Док.Подразделение
        |           И ВТ_Тч.ПодразделениеПолучатель = ВТ_Док.ПодразделениеПолучатель
        |
        |СГРУППИРОВАТЬ ПО
        |   ВТ_Тч.Организация,
        |   ВТ_Тч.ОсновноеСредство,
        |   ВТ_Тч.ПодразделениеОтправитель,
        |   ВТ_Тч.ПодразделениеПолучатель,
        |   ВТ_Тч.МОЛСдатчик,
        |   ВТ_Тч.МОЛПолучатель,
        |   ВТ_Тч.НачислениеАмортизации,
        |   ВТ_Тч.СтатьяРасходов,
        |   ВТ_Тч.АналитикаРасходов,
        |   ВТ_Тч.ИзменяетсяОтражениеРасходовПоНалогу,
        |   ВТ_Тч.СтатьяРасходовНалог,
        |   ВТ_Тч.АналитикаРасходовНалог,
        |   ВТ_Тч.АдресПолучатель
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |   ВТ_СгрупированныеДанные.Организация КАК Организация,
        |   ВТ_СгрупированныеДанные.ОсновноеСредство КАК ОсновноеСредство,
        |   ВТ_СгрупированныеДанные.Подразделение КАК Подразделение,
        |   ВТ_СгрупированныеДанные.ПодразделениеПолучатель КАК ПодразделениеПолучатель,
        |   ВТ_СгрупированныеДанные.ДокументПеремещения КАК ДокументПеремещения,
        |   ВТ_СгрупированныеДанные.МОЛ КАК МОЛ,
        |   ВТ_СгрупированныеДанные.МОЛПолучатель КАК МОЛПолучатель,
        |   ВТ_СгрупированныеДанные.НачислениеАмортизации КАК НачислениеАмортизации,
        |   ВТ_СгрупированныеДанные.СтатьяРасходов КАК СтатьяРасходов,
        |   ВТ_СгрупированныеДанные.АналитикаРасходов КАК АналитикаРасходов,
        |   ВТ_СгрупированныеДанные.ИзменяетсяОтражениеРасходовПоНалогу КАК ИзменяетсяОтражениеРасходовПоНалогу,
        |   ВТ_СгрупированныеДанные.СтатьяРасходовНалог КАК СтатьяРасходовНалог,
        |   ВТ_СгрупированныеДанные.АналитикаРасходовНалог КАК АналитикаРасходовНалог,
        |   ВТ_СгрупированныеДанные.АдресПолучатель КАК АдресПолучатель,
        |   ВТ_Тч.АдресПолучательЗначение КАК АдресПолучательЗначение
        |ИЗ
        |   ВТ_СгрупированныеДанные КАК ВТ_СгрупированныеДанные
        |       ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Тч КАК ВТ_Тч
        |       ПО ВТ_СгрупированныеДанные.ОсновноеСредство = ВТ_Тч.ОсновноеСредство
        |           И ВТ_СгрупированныеДанные.Подразделение = ВТ_Тч.ПодразделениеОтправитель
        |           И ВТ_СгрупированныеДанные.ПодразделениеПолучатель = ВТ_Тч.ПодразделениеПолучатель
        |           И ВТ_СгрупированныеДанные.МОЛ = ВТ_Тч.МОЛСдатчик
        |           И ВТ_СгрупированныеДанные.МОЛПолучатель = ВТ_Тч.МОЛПолучатель
        |           И ВТ_СгрупированныеДанные.АдресПолучатель = ВТ_Тч.АдресПолучатель";
    
    Запрос.УстановитьПараметр("тч", Таблица.Выгрузить());
    Запрос.УстановитьПараметр("Организация", Организация);
    РезультатЗапроса = Запрос.Выполнить();
    
    Выборка = РезультатЗапроса.Выбрать();
    
    ДокОбъект = Неопределено;
    ОС_с_Документами = Новый Массив;
    
    Пока Выборка.Следующий() Цикл
        
        Если Выборка.ДокументПеремещения > 0 Тогда
            Структура = Новый Структура;
            Структура.Вставить("ОС", Выборка.ОсновноеСредство);
            Структура.Вставить("Подразделение", Выборка.Подразделение);
            Структура.Вставить("ПодразделениеПолучатель", Выборка.ПодразделениеПолучатель);
            ОС_с_Документами.Добавить(Структура);
            Продолжить;
        КонецЕсли; 
        
        НуженНовыйДокумент = СоздатьНовыйДокумент(ДокОбъект, Выборка);
        Если НуженНовыйДокумент Тогда
            Если ДокОбъект <> Неопределено Тогда
                ЗаписатьДокумент(ДокОбъект);
            КонецЕсли; 
        	ДокОбъект = Документы.ПеремещениеОС2_4.СоздатьДокумент();
            ДокОбъект.Дата = ТекущаяДатаСеанса();
            ДокОбъект.Организация = Организация;
            ДокОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеОС;
            ДокОбъект.Ответственный = Пользователи.ТекущийПользователь();
            
            ЗаполнитьЗначенияСвойств(ДокОбъект, Выборка);
                        
        КонецЕсли; 
         НовСтр = ДокОбъект.ОС.Добавить();
         НовСтр.ОсновноеСредство =  Выборка.ОсновноеСредство;
    КонецЦикла;
    
    
    Если ДокОбъект <> Неопределено Тогда
        Комментарий = НСтр("ru = '# Автоматически создано обработкой ""Массовое Перемещение(ОС)"" от %1.'");
        Комментарий = СтрШаблон(Комментарий, Формат(ДокОбъект.Дата, "ДЛФ=DDT"));
        ДокОбъект.Комментарий = Комментарий;
        ЗаписатьДокумент(ДокОбъект);
    КонецЕсли; 

    Возврат ОС_с_Документами;
КонецФункции

&НаСервереБезКонтекста
Функция СоздатьНовыйДокумент(Знач ДокОбъект, Знач Строка)
    Если ДокОбъект = Неопределено Тогда
    	 НуженНовыйДокумент = Истина;
     Иначе
         НуженНовыйДокумент = СравнитьПоля(ДокОбъект, Строка);
    КонецЕсли; 
    
    Возврат НуженНовыйДокумент;
КонецФункции 

&НаСервереБезКонтекста
Функция СравнитьПоля(ДокОбъект, Строка)
    НуженНовыйДокумент = НЕ (ДокОбъект.Подразделение =  Строка.Подразделение
                         И ДокОбъект.МОЛ =  Строка.МОЛСдатчик
                         И ДокОбъект.ПодразделениеПолучатель =  Строка.ПодразделениеПолучатель
                         И ДокОбъект.МОЛПолучатель =  Строка.МОЛПолучатель
                         И ДокОбъект.НачислениеАмортизации =  Строка.НачислениеАмортизации
                         И ДокОбъект.СтатьяРасходов =  Строка.СтатьяРасходов
                         И ДокОбъект.АналитикаРасходов =  Строка.АналитикаРасходов
                         И ДокОбъект.ИзменяетсяОтражениеРасходовПоНалогу =  Строка.ИзменяетсяОтражениеРасходовПоНалогу
                         И ДокОбъект.СтатьяРасходовНалог =  Строка.СтатьяРасходовНалог
                         И ДокОбъект.АналитикаРасходовНалог =  Строка.АналитикаРасходовНалог);
    Возврат НуженНовыйДокумент;         
КонецФункции

&НаСервереБезКонтекста
Процедура ЗаписатьДокумент(ДокОбъект)
    Попытка
        ДокОбъект.Заполнить(Неопределено);
        ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);  
    Исключение
        ДокОбъект.Записать(РежимЗаписиДокумента.Запись);  
        ТекстСообщения = ОписаниеОшибки();
        Сообщение = Новый СообщениеПользователю;
        Сообщение.Текст = ТекстСообщения;
        Сообщение.Сообщить();
	КонецПопытки;
	
	// верменно
	ДопРеквизит_ОКВЭД = "ОКВЭД_b2cd3d401b88498cafc8a1e91c334a60";
	
	// Заполняем доп. реквизит ОКВЭД
	ОКВЭД = УправлениеСвойствами.ЗначениеСвойства(ДокОбъект.Подразделение, ДопРеквизит_ОКВЭД);
	Свойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя", ДопРеквизит_ОКВЭД); 
    ТипСвойства = Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения");
    ТаблицаСвойствИЗначений = Новый ТаблицаЗначений;
	ТаблицаСвойствИЗначений.Колонки.Добавить("Свойство", ТипСвойства);
	ТаблицаСвойствИЗначений.Колонки.Добавить("Значение");
	НовСтр = ТаблицаСвойствИЗначений.Добавить();
	НовСтр.Свойство = Свойство;
	НовСтр.Значение = ОКВЭД;
	Для Каждого ОС Из ДокОбъект.ОС Цикл
		УправлениеСвойствами.ЗаписатьСвойстваУОбъекта(ОС.ОсновноеСредство, ТаблицаСвойствИЗначений);
	КонецЦикла;
	// верменно
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПодборОС(МножественныйВыбор)
    
    Если Организация.Пустая() Тогда
        Сообщение = Новый СообщениеПользователю;
        Сообщение.Текст = НСтр("ru='Поле ""Организация"" не заполнено'");
        Сообщение.Поле = "Организация";
        Сообщение.Сообщить();
        
        Возврат ;
    КонецЕсли; 
 
    
   ПараметрыФормы = Новый Структура;
   ПараметрыФормы.Вставить("Дата", КонецДня(Дата));
   ПараметрыФормы.Вставить("Организация", Организация);
   ПараметрыФормы.Вставить("МножественныйВыбор", МножественныйВыбор);
   
   ОткрытьФорму("Обработка.тн_МассовоеПеремещениеОС.Форма.ФормаПодбора", 
					ПараметрыФормы, Элементы.Таблица, , , , , 
					РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры
                
&НаКлиенте
Функция ОбязательныеПоляЗаполнены(Строка)
    НужноЗаполнитьАналитикуРасходов = ?(ЗначениеЗаполнено(Строка.СтатьяРасходов), 
                                        ЗначениеЗаполнено(Строка.АналитикаРасходов),
                                        Истина);
    НужноЗаполнитьАналитикуРасходовНалог = ?(ЗначениеЗаполнено(Строка.СтатьяРасходовНалог),
                                            ЗначениеЗаполнено(Строка.АналитикаРасходовНалог),
                                            Истина);

    ЗаполненыНужныеПоля = ЗначениеЗаполнено(Строка.ОсновноеСредство)
                        И ЗначениеЗаполнено(Строка.ПодразделениеПолучатель)
                        И ЗначениеЗаполнено(Строка.МОЛПолучатель)
                        И НужноЗаполнитьАналитикуРасходов
                        И НужноЗаполнитьАналитикуРасходовНалог; 
                        
    Возврат  ЗаполненыНужныеПоля;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьКодБЕ_Подразделения(Подразделение)
    КодБЕ = Неопределено; 
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
     |  СтруктураПредприятияДополнительныеРеквизиты.Ссылка КАК Ссылка,
     |  СтруктураПредприятияДополнительныеРеквизиты.Значение КАК Значение
     |ИЗ
     |  Справочник.СтруктураПредприятия.ДополнительныеРеквизиты КАК СтруктураПредприятияДополнительныеРеквизиты
     |      ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
     |      ПО СтруктураПредприятияДополнительныеРеквизиты.Свойство = ДополнительныеРеквизитыИСведения.Ссылка
     |          И (ДополнительныеРеквизитыИСведения.Имя = &ИмяКодБЕ)
     |ГДЕ
     |  СтруктураПредприятияДополнительныеРеквизиты.Ссылка = &Ссылка";
    Запрос.УстановитьПараметр("Ссылка", Подразделение);
    Запрос.УстановитьПараметр("ИмяКодБЕ", "КодБЕSAP_44d09932c2ce40dfb68e4e26ded7bf4b");
    
    РезультатЗапроса = Запрос.Выполнить();
    Если НЕ РезультатЗапроса.Пустой() Тогда
        Выборка = РезультатЗапроса.Выбрать();
        Выборка.Следующий();
        КодБЕ = Выборка.Значение;
    КонецЕсли; 
    
    Возврат КодБЕ;
КонецФункции


&НаКлиенте
Процедура ЗаполнитьАдрес(ЗначенияПолей, Представление, ИмяПроцедурыОповещения, ДополнительныеПараметры)
    
    ВидКонтактнойИнформации = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ПочтовыйАдресОрганизации");
    
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("ВидКонтактнойИнформации", ВидКонтактнойИнформации); 
                                    
	ПараметрыОткрытияФормы.Вставить("Заголовок", нСтр("ru='Адрес'", "ru"));
	ПараметрыОткрытияФормы.Вставить("ЗначенияПолей", ЗначенияПолей);
	ПараметрыОткрытияФормы.Вставить("Представление", Представление);
	
	Оповещение = Новый ОписаниеОповещения(ИмяПроцедурыОповещения, ЭтотОбъект, Новый Структура);
    Для каждого Строка Из ДополнительныеПараметры Цикл
    	Оповещение.ДополнительныеПараметры.Вставить(Строка.Ключ, Строка.Значение);
    КонецЦикла; 
    	
	УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуКонтактнойИнформации(ПараметрыОткрытияФормы, , Оповещение);

КонецПроцедуры

&НаКлиенте
Процедура ПоказатьКолонкиПолучателяПриИзменении(Элемент)
    Элементы.Получатель.Видимость = ПоказатьКолонкиПолучателя;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнениеСтрокиТаблицы(НоваяСтрока, ЭлементМассива)
    ЗаполнитьЗначенияСвойств(НоваяСтрока, ЭлементМассива);
    Если НЕ ПоказатьКолонкиПолучателя Тогда
        НоваяСтрока.АдресПолучатель = Адрес;
        НоваяСтрока.АдресПолучательЗначение = АдресЗначение;	
        НоваяСтрока.ПодразделениеПолучатель = ПодразделениеПолучатель;
        НоваяСтрока.МОЛПолучатель = МОЛПолучатель;
        НоваяСтрока.КодБЕ_ПодразделениеПолучатель = КодБЕПолучателя;
    КонецЕсли; 
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТекущегоПользователя()
    Возврат ПараметрыСеанса.ТекущийПользователь;
КонецФункции

&НаКлиенте
Процедура ТаблицаСтатьяРасходовПриИзменении(Элемент)
    ТекСтрока = Элементы.Таблица.ТекущаяСтрока;
    ТекСтрока.АналитикаРасходов.ОграничениеТипа = ТекСтрока.СтатьяРасходов.ТипЗначения;

КонецПроцедуры
#КонецОбласти

