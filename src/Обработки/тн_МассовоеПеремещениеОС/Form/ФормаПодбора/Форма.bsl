#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
    
    СвойствоКодБЕSAP = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя", "БЕ_SAP");
	
	НоваяСвязь = Новый СвязьПараметраВыбора("Отбор.Владелец", "СвойствоКодБЕSAP", РежимИзмененияСвязанногоЗначения.Очищать);
	НовыйМассив = Новый Массив();
	НовыйМассив.Добавить(НоваяСвязь);
	Элементы.КодБЕSAPСдатчик.СвязиПараметровВыбора = Новый ФиксированныйМассив(НовыйМассив);
	
	Элементы.КодБЕSAPСдатчик.СвязьПоТипу = Новый СвязьПоТипу("СвойствоКодБЕSAP", 0);
	Элементы.КодБЕSAPСдатчик.ОграничениеТипа = СвойствоКодБЕSAP.ТипЗначения;
    Элементы.КодБЕSAPСдатчик.Доступность = ИспользоватьОтборПоКодБЕ;
    
    
    Организация = Параметры.Организация;
    Период = Параметры.Дата;
    ЗакрыватьПриВыборе = Параметры.ЗакрыватьПриВыборе;
    
    МножественныйВыбор = Параметры.МножественныйВыбор;
    Элементы.Таблица.МножественныйВыбор = МножественныйВыбор;
    Элементы.Таблица.РежимВыделения = ?(МножественныйВыбор, 
                                        РежимВыделенияТаблицы.Множественный, 
                                        РежимВыделенияТаблицы.Одиночный);    
    ИнициализироватьКомпоновкуДанных();
    
    ЗаполнитьПоОтборуНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборОСНастройкиОтборПриИзменении(Элемент)
    ЗаполнитьПоОтборуНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура КодБЕSAPСдатчикПриИзменении(Элемент)
    Если ИспользоватьОтборПоКодБЕ Тогда
    	УстановитьОтбор("КодБЕ_ПодразделениеСдатчик", КодБЕSAPСдатчик);
    КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОтборПоКодБЕПриИзменении(Элемент)
    Если НЕ ИспользоватьОтборПоКодБЕ Тогда
        УдалитьОтбор("КодБЕ_ПодразделениеСдатчик");
        КодБЕSAPСдатчик = Неопределено;
    КонецЕсли;
    Элементы.КодБЕSAPСдатчик.Доступность = ИспользоватьОтборПоКодБЕ;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьПоОтбору(Команда)
    ЗаполнитьПоОтборуНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
    ВыбранныеЭлементы = Новый Массив;
    
    Если МножественныйВыбор Тогда
        Для каждого ИдентификаторСтроки Из Элементы.Таблица.ВыделенныеСтроки Цикл
            ДанныеСтроки = Элементы.Таблица.ДанныеСтроки(ИдентификаторСтроки);
            ВыбранныеЭлементы.Добавить(ДанныеСтроки);
        КонецЦикла;
    Иначе
        ВыбранныеЭлементы.Добавить(Элементы.Таблица.ТекущиеДанные);
    КонецЕсли;
    
    ОповеститьОВыборе(ВыбранныеЭлементы);
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИнициализироватьКомпоновкуДанных()
    СхемаКомпоновкиДанных = Обработки.тн_МассовоеПеремещениеОС.ПолучитьМакет("МакетСКД");
	
	URLСхемы = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, Новый УникальныйИдентификатор());
	
	ИсточникНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(URLСхемы);
	
	ОтборОС.Инициализировать(ИсточникНастроек);
	
	ОтборОС.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
    
    
    ЭлементОтбора = ОтборОС.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("МОЛСдатчик");
    ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    ЭлементОтбора.ПравоеЗначение = ПараметрыСеанса.ТекущийПользователь.ФизическоеЛицо;
    
    ОтборОС.Настройки.ПараметрыВывода.УстановитьЗначениеПараметра("ВыводитьОтбор",
                                                            ТипВыводаТекстаКомпоновкиДанных.Выводить);
    
КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьПоОтборуНаСервере()
	
    Обработки.тн_МассовоеПеремещениеОС.УстановитьНастройкиСКД(Период, Организация, ОтборОС);
    
    СхемаКомпоновкиДанных = Обработки.тн_МассовоеПеремещениеОС.ПолучитьМакет("МакетСКД");
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки   = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, ОтборОС.ПолучитьНастройки(), , ,
                                                    Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Таблица.Загрузить(ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных));
    
КонецПроцедуры


&НаКлиенте
Процедура УстановитьОтбор(ИмяПолеОтбора, Значение)
    
    Настройки = ОтборОС.Настройки;
    
    УдалитьЭлементОтбора(ИмяПолеОтбора);
    
    ЭлементОтбора = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяПолеОтбора);
    ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    ЭлементОтбора.ПравоеЗначение = Значение;
    
    Настройки.ПараметрыВывода.УстановитьЗначениеПараметра("ВыводитьОтбор",
                                                            ТипВыводаТекстаКомпоновкиДанных.Выводить);
    ЗаполнитьПоОтборуНаСервере();
    
КонецПроцедуры

&НаКлиенте
Процедура УдалитьОтбор(ИмяПолеОтбора)
    
    Настройки = ОтборОС.Настройки;
    
    УдалитьЭлементОтбора(ИмяПолеОтбора); 
    
    Настройки.ПараметрыВывода.УстановитьЗначениеПараметра("ВыводитьОтбор",
                                                            ТипВыводаТекстаКомпоновкиДанных.Выводить);
    ЗаполнитьПоОтборуНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура УдалитьЭлементОтбора(ИмяПолеОтбора)
    Настройки = ОтборОС.Настройки;
    
    ТекущийИндекс = Настройки.Отбор.Элементы.Количество() - 1;
    Пока ТекущийИндекс >= 0 Цикл
        ЭлементОтбора = Настройки.Отбор.Элементы.Получить(ТекущийИндекс);
        Если ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяПолеОтбора) Тогда
        	 Настройки.Отбор.Элементы.Удалить(ЭлементОтбора);
       КонецЕсли; 
       ТекущийИндекс = ТекущийИндекс - 1;
    КонецЦикла;
     
КонецПроцедуры

#КонецОбласти
