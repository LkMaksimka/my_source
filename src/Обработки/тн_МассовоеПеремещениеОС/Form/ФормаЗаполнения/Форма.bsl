
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
    ОбъектРек = РеквизитФормыВЗначение("Объект");
	ТабличныйДокумент = ОбъектРек.ПолучитьМакет("Макет");
    Организация = Параметры.Организация;
    Период = Параметры.Дата;

КонецПроцедуры


#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗагрузитьВАРМ(Команда)
    
    НомерСтроки = 2;
	
	СтрокаЗаполнена = ЕстьСтрокаДляОбработки(НомерСтроки, ТабличныйДокумент);
    
    СписокКодов = Новый СписокЗначений;
    
	Пока СтрокаЗаполнена Цикл
        
        СписокКодов.Добавить(ТабличныйДокумент.Область("R" + НомерСтроки + "C1").Текст);
		
        НомерСтроки = НомерСтроки + 1;
		
		СтрокаЗаполнена = ЕстьСтрокаДляОбработки(НомерСтроки, ТабличныйДокумент);
	КонецЦикла;
	
	НайтиОСВИБ(СписокКодов);

    НеНайденыеКоды = ПолучитьНенайденыеКодыОС(СписокКодов);
    
    СтруктураВыбора = Новый Структура();
    СтруктураВыбора.Вставить("ТаблицаОС", ТаблицаОС);
    СтруктураВыбора.Вставить("НеНайденыеКоды", НеНайденыеКоды);
    ОповеститьОВыборе(СтруктураВыбора);

КонецПроцедуры
	
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НайтиОСВИБ(СписокКодов)
    
    СхемаКомпоновкиДанных = Обработки.тн_МассовоеПеремещениеОС.ПолучитьМакет("МакетСКД");
    
    КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
    КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
    КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
    
    Обработки.тн_МассовоеПеремещениеОС.УстановитьНастройкиСКД(Период, Организация, КомпоновщикНастроек);
    
    УстановитьОтбор(КомпоновщикНастроек.Настройки, "ОсновноеСредство.Код", СписокКодов);
        
 	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки   = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.ПолучитьНастройки(), , ,
                                                    Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ТаблицаРезультат = ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
    
    ОбъектЗначение = РеквизитФормыВЗначение("ТаблицаОС");
    ОбъектЗначение.Очистить();
    Для каждого Стр Из ТаблицаРезультат Цикл
        НовСтр = ОбъектЗначение.Добавить();
        ЗаполнитьЗначенияСвойств(НовСтр, Стр);
    КонецЦикла; 
    
    ЗначениеВРеквизитФормы(ОбъектЗначение, "ТаблицаОС");
    
КонецПроцедуры 

&НаСервере
Процедура УстановитьОтбор(Настройки, ИмяПолеОтбора, Значение)
       
    ЭлементОтбора = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяПолеОтбора);
    ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
    ЭлементОтбора.ПравоеЗначение = Значение;
    
    Настройки.ПараметрыВывода.УстановитьЗначениеПараметра("ВыводитьОтбор",
                                                            ТипВыводаТекстаКомпоновкиДанных.Выводить);
      
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЕстьСтрокаДляОбработки(НомерСтроки, ТабличныйДокумент)
	
	Код  = ТабличныйДокумент.Область("R" + НомерСтроки + "C1").Текст;
	
	СтрокаЗаполнена = НЕ ПустаяСтрока(Код);
												
	Возврат СтрокаЗаполнена;
    
КонецФункции

// Описание: Переносим коды в массив и убираем лишние пробелы, т.к. из-за них не находит.
// Параметры: СписокКодов - СписокЗначений
// Возвращаемое значение: Массив
&НаКлиенте
Функция ПолучитьНенайденыеКодыОС(СписокКодов)
    
    НеНайденыеКоды = Новый Массив;
    КодыВТаблицыОС = Новый Массив;
    
    Для каждого Строка Из ТаблицаОС Цикл
    	  КодыВТаблицыОС.Добавить(СокрЛП(Строка.ОсновноеСредствоКод));
    КонецЦикла;
    
    Для каждого Код Из СписокКодов Цикл
    	НайденКод = КодыВТаблицыОС.Найти(СокрЛП(Код));
        Если НайденКод = Неопределено Тогда
        	НеНайденыеКоды.Добавить(Код);
        КонецЕсли; 
    КонецЦикла;
    
   Возврат НеНайденыеКоды; 
КонецФункции

#КонецОбласти

