
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Организация  = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	Склад 	        = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнойСклад");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДерево

&НаКлиенте
Процедура ДеревоПриИзменении(Элемент)
	Элементы.ДеревоКоличество.ТекстПодвала = ДеревоЗаказа.Итог("Количество");
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПрочитатьФайл(Команда)
    
	Оповещение = Новый ОписаниеОповещения("ОбработатьВыборФайла", ЭтотОбъект);
	
	НачатьПомещениеФайла(Оповещение, , , Истина, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументы(Команда)
    
	ПроверкаПройдена = ПроверкаЗаполнения();
	
	Если ПроверкаПройдена Тогда
		СоздатьДокументыНаСервере();
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработатьВыборФайла(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	Если НЕ Результат Тогда
		Возврат;
	КонецЕсли; 
	ФайлЗаявки =  Новый файл(ВыбранноеИмяФайла);
	Если НЕ ФайлЗаявки.Существует() Тогда
		 Возврат;
	КонецЕсли; 
	ФайлExcell = ВыбранноеИмяФайла;	
	
	СписокОшибок = Новый Массив;
	ЗагрузкаНаСервере(СписокОшибок);
	
	Элементы.ДеревоКоличество.ТекстПодвала = "Итого: " + ДеревоЗаказа.Итог("Количество");
	
	Для каждого СтрокЭлемента Из СписокОшибок Цикл
		ВывестиСообщениеПользователю(СтрокЭлемента);
	КонецЦикла; 
КонецПроцедуры

&НаСервере
Процедура ЗагрузкаНаСервере(СписокОшибок)
	ВКФайл = СохранитьВК();
	
	СтрокаИННКПП = 4;
	КолонкаИННКПП = 1;
	СтрокаКПП	 = 4;
    НомерПервойСтрокиСТоваром = 5;
    НомерПервойКолонки = 4;
    КоличествоЭлементов = 2; // в массиве должно быть 2 элемента, это ИНН и КПП.
	
	Попытка	
		ПодключитьВнешнююКомпоненту(ВКФайл, "ExcelNative", AddInType.Native);
		XLS = Новый("AddIn.ExcelNative.V8Excel"); 
	Исключение
		 СписокОшибок.Добавить(ОписаниеОшибки() + НСтр("ru=' Компанента ExcelNative не найдена на данном компьютере!'"));
	КонецПопытки;
	
	Листов = XLS.ОткрытьФайл(ФайлExcell);	
	
	ВсегоСтрок = XLS.КоличествоСтрок(1);
	ВсегоКолонок = XLS.КоличествоКолонок(1);
	
    ОсновнойКонтрагентИННКПП = СокрЛП(СтрЗаменить(XLS.ЗначениеЯчейки(КолонкаИННКПП, СтрокаИННКПП, 1), "ИНН", ""));
    мОсновнойКонтрагентИННКПП = СтрРазделить(ОсновнойКонтрагентИННКПП, "\");
    Если мОсновнойКонтрагентИННКПП.Количество() < КоличествоЭлементов Тогда
        СписокОшибок.Добавить(нСтр("ru='В загружаемом файле в строке №4 не верно указан ИНН\КПП!!!'", "ru"));
    КонецЕсли; 
    ИНН = мОсновнойКонтрагентИННКПП[0];	
    КПП = мОсновнойКонтрагентИННКПП[1];	
	
	Контрагент = ПолучитьКонтрагента(ИНН, КПП);
	
	ДеревоЗаказа.Очистить();
	
	Для  Стр = НомерПервойСтрокиСТоваром По ВсегоСтрок Цикл
		
		Товар = XLS.ЗначениеЯчейки(1, Стр, 1);
		
		Если СокрЛП(Товар) = "" Тогда
			Продолжить;
		КонецЕсли; 
		
		Для Кол = НомерПервойКолонки По ВсегоКолонок Цикл
			
			КПП				= Формат(XLS.ЗначениеЯчейки(1, СтрокаКПП, Кол), "ЧГ=0");
			КонтаргентНаименование = XLS.ЗначениеЯчейки(1, 1, Кол);

			Количество	= XLS.ЗначениеЯчейки(1, Стр, Кол);
			
			Номенклатура = Номенклатура(Товар);

			НовСтр = ДеревоЗаказа.Добавить();
			НовСтр.КонтрагентКПП		  = КПП;
			НовСтр.КонтрагентНаименование = КонтаргентНаименование;
			НовСтр.Контрагент			  = ПолучитьКонтрагента(ИНН, КПП);
			НовСтр.ДоговорыКонтрагентов	  = ПолучитьОсновнойДоговорКонтрагента(НовСтр.Контрагент, Организация);
			НовСтр.НоменклатураНаименование = Товар;
			НовСтр.Номенклатура			  = Номенклатура;
			НовСтр.Количество 			  = Количество;
		КонецЦикла; 
		
	КонецЦикла; 
	  ДеревоЗаказа.Сортировать("КонтрагентНаименование");
КонецПроцедуры

&НаКлиенте
Функция ПроверкаЗаполнения()
	
	
	
	Если Организация.Пустая() Тогда
		ВывестиСообщениеПользователю(НСтр("ru='НЕ Заполнена Организация'"));
		ПроверкаПройдена = Ложь;
	ИначеЕсли Контрагент.Пустая() Тогда 
		ВывестиСообщениеПользователю(НСтр("ru='НЕ Заполнен Контрагент'"));
		ПроверкаПройдена = Ложь;
	ИначеЕсли Склад.Пустая() Тогда 
		ВывестиСообщениеПользователю(НСтр("ru='НЕ Заполнен Склад'"));
		ПроверкаПройдена = Ложь;
	ИначеЕсли Дата = Дата("00010101") Тогда 
		ВывестиСообщениеПользователю(НСтр("ru='НЕ Заполнена Дата'"));
		ПроверкаПройдена = Ложь;
	ИначеЕсли Цена = 0 Тогда
		ВывестиСообщениеПользователю(НСтр("ru='НЕ Заполнена Цена'"));
		ПроверкаПройдена = Ложь;
	ИначеЕсли НДС.Пустая() Тогда
		ВывестиСообщениеПользователю(НСтр("ru='НЕ Заполнен НДС'"));
		ПроверкаПройдена = Ложь;
	ИначеЕсли ОтпускПроизвел.Пустая() Тогда
		ВывестиСообщениеПользователю(НСтр("ru='НЕ Заполнен Отпуск произвел'"));
		ПроверкаПройдена = Ложь;
	ИначеЕсли ОтветственныйЗаОформление.Пустая() Тогда
		ВывестиСообщениеПользователю(НСтр("ru='НЕ Заполнен Отвествтвенный за Оформление'"));	
		ПроверкаПройдена = Ложь;
	Иначе
		ПроверкаПройдена = Истина;
	КонецЕсли; 
	
	Для каждого Строка Из ДеревоЗаказа Цикл
		
		Если Строка.Контрагент.Пустая() Тогда
			ВывестиСообщениеПользователю(НСтр("ru='НЕ Заполнен Контрагент'"));	
			ПроверкаПройдена = Ложь;
		КонецЕсли; 
		Если Строка.ДоговорыКонтрагентов.Пустая() Тогда
			ВывестиСообщениеПользователю(НСтр("ru='НЕ Заполнен Договор контрагента'"));	
			ПроверкаПройдена = Ложь;
		КонецЕсли; 
		
	КонецЦикла; 
	
	Возврат ПроверкаПройдена;
КонецФункции 

&НаСервере
Процедура СоздатьДокументыНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТчДерево.Контрагент КАК Контрагент,
	|	ТчДерево.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов,
	|	ТчДерево.КонтрагентНаименование КАК КонтрагентНаименование,
	|	ТчДерево.Номенклатура,
	|	ТчДерево.Количество
	|ПОМЕСТИТЬ ВтДанные
	|ИЗ
	|	&ТчДерево КАК ТчДерево
	|ГДЕ
	|	ТчДерево.Контрагент <> &Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтДанные.Контрагент КАК Контрагент,
	|	ВтДанные.Номенклатура,
	|	ВтДанные.Количество,
	|	ВтДанные.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ИЗ
	|	ВтДанные КАК ВтДанные
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВтДанные.КонтрагентНаименование
	|ИТОГИ ПО
	|	Контрагент,
	|	ДоговорыКонтрагентов";
	Запрос.УстановитьПараметр("ТчДерево", ДеревоЗаказа.Выгрузить());
	Запрос.УстановитьПараметр("Контрагент", Справочники.Контрагенты.ПустаяСсылка());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаПоКонтрагенту = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаПоКонтрагенту.Следующий() Цикл
		Документ = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
		Документ.Дата = Дата;
		Документ.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Товары;
		Документ.ВалютаДокумента = Константы.ВалютаРегламентированногоУчета.Получить();
		Документ.КратностьВзаиморасчетов = 1;
		Документ.КурсВзаиморасчетов = 1;
		Документ.СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.Автоматически;
		Документ.Склад   = Склад;
		Документ.ОтпускПроизвел	= ОтпускПроизвел;
		Документ.ОтветственныйЗаОформление	= ОтветственныйЗаОформление;
		Документ.СуммаВключаетНДС = Истина;
		
		Документ.Организация = Организация;
		Документ.Контрагент = ВыборкаПоКонтрагенту.Контрагент;
		
		ВыборкаДоговоры = ВыборкаПоКонтрагенту.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаДоговоры.Следующий() Цикл
			
			Документ.ДоговорКонтрагента =  ВыборкаДоговоры.ДоговорыКонтрагентов;
			
			ВыборкаНоменклатуры = ВыборкаДоговоры.Выбрать();
			
			Пока ВыборкаНоменклатуры.Следующий() Цикл
				НовСтр = Документ.Товары.Добавить();
				НовСтр.Номенклатура = ВыборкаНоменклатуры.Номенклатура;
				НовСтр.Количество   = ВыборкаНоменклатуры.Количество;
				НовСтр.Цена			= Цена;
				НовСтр.СтавкаНДС    = НДС;
				НовСтр.Сумма 	 	= НовСтр.Количество *  НовСтр.Цена;
				
				ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(НовСтр,  Документ.СуммаВключаетНДС,  Ложь);
			КонецЦикла; 
			
		КонецЦикла; 
		
		Документы.РеализацияТоваровУслуг.ЗаполнитьСчетаУчетаРасчетов(Документ);
		Документы.РеализацияТоваровУслуг.ЗаполнитьСчетаУчетаВТабличнойЧасти(Документ, "Товары");
		
		Документ.Записать();
	КонецЦикла; 
	
КонецПроцедуры // *

&НаСервере
Функция СохранитьВК()
	ОбъектВК = РеквизитФормыВЗначение("Объект");
	ВкФайл = ОбъектВК.ПолучитьМакет("ExcelNative");
	ВКФайл.Записать(КаталогВременныхФайлов() + "ExcelNative.dll");	
	Возврат КаталогВременныхФайлов() + "ExcelNative.dll";
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьОсновнойДоговорКонтрагента(Контрагент, Организация)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОсновныеДоговорыКонтрагента.Договор
		|ИЗ
		|	РегистрСведений.ОсновныеДоговорыКонтрагента КАК ОсновныеДоговорыКонтрагента
		|ГДЕ
		|	ОсновныеДоговорыКонтрагента.Организация = &Организация
		|	И ОсновныеДоговорыКонтрагента.Контрагент = &Контрагент
		|	И ОсновныеДоговорыКонтрагента.ВидДоговора = &ВидДоговора";
	
	Запрос.УстановитьПараметр("ВидДоговора", Перечисления.ВидыДоговоровКонтрагентов.СПокупателем);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		ОсновнойДоговор = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
	Иначе
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		ОсновнойДоговор = ВыборкаДетальныеЗаписи.Договор;
	КонецЕсли; 

      Возврат ОсновнойДоговор;
КонецФункции // *ПолучитьДоговорКонтрагента(ВыборкаПоКонтрагенту.Контрагент)

&НаСервереБезКонтекста
Функция Номенклатура(Товар)
	СпрНом = Справочники.Номенклатура.НайтиПоНаименованию(Товар);
	
	Если СпрНом.Пустая() Тогда
		СпрНом = Справочники.Номенклатура.СоздатьЭлемент();
		СпрНом.Наименование = Товар;
		СпрНом.Записать();
	КонецЕсли; 
	
	Возврат СпрНом;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьКонтрагента(ИНН, КПП)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Контрагенты.Ссылка
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.ИНН = &ИНН
		|	И Контрагенты.КПП = &КПП";
	
	Запрос.УстановитьПараметр("ИНН", ИНН);
	Запрос.УстановитьПараметр("КПП", КПП);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Контрагент =  Справочники.Контрагенты.ПустаяСсылка();
	Иначе
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		Контрагент =  ВыборкаДетальныеЗаписи.Ссылка;
	КонецЕсли; 
    
    Возврат Контрагент;
    
КонецФункции // *ПолучитьКонтрагента(ИНН,КПП)

&НаКлиенте
Процедура ВывестиСообщениеПользователю(ТекстСообщения)
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = ТекстСообщения;
	Сообщение.Сообщить();

КонецПроцедуры // -- *ММГ 10.02.2020


#КонецОбласти



