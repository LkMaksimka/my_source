&НаКлиенте
Процедура ОбработатьВыборФайла(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	Если НЕ Результат Тогда
		Возврат;
	КонецЕсли; 
	ФайлЗаявки =  Новый файл(ВыбранноеИмяФайла);
	Если НЕ ФайлЗаявки.Существует() Тогда
		 Возврат;
	КонецЕсли; 
	ФайлExcell = ВыбранноеИмяФайла;	
	ЗагрузкаНАСервере();
	
КонецПроцедуры
// ---------------------------------
&НаКлиенте
Процедура ПрочитатьФайл(Команда)
	Оповещение = Новый ОписаниеОповещения("ОбработатьВыборФайла",ЭтотОбъект);
	
	НачатьПомещениеФайла(Оповещение,,,Истина,УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузкаНАСервере()
	ВКФайл = СохранитьВК();
	
	СтрокаИННКПП = 3;
	КолонкаИННКПП = 1;
	СтрокаКПП	 = 3;
	
	//ВК
	Попытка	
		ПодключитьВнешнююКомпоненту(ВКФайл,"ExcelNative",AddInType.Native);
		XLS =Новый("AddIn.ExcelNative.V8Excel"); 
	Исключение
		Сообщить(ОписаниеОшибки() + " Компанента ExcelNative не найдена на данном компьютере!");
		
	КонецПопытки;
	
	Листов=XLS.ОткрытьФайл(ФайлExcell);	
	
	//ВК	
	ВсегоСтрок= XLS.КоличествоСтрок(1);
	ВсегоКолонок = XLS.КоличествоКолонок(1);
	
	ОсновнойКонтрагентИННКПП = СтрЗаменить(XLS.ЗначениеЯчейки(1,3,1),"ИНН","");
	ИНН = СокрЛП(Лев(ОсновнойКонтрагентИННКПП,11));	
	КПП = СокрЛП(Прав(ОсновнойКонтрагентИННКПП,9));	
	
	Контаргент = ПолучитьКонтрагента(ИНН,КПП);
	
	ДеревоЗаказа.Очистить();
	
	Для  Стр = 4 По ВсегоСтрок Цикл
		
		Товар = XLS.ЗначениеЯчейки(1,Стр,1);
		
		Если СокрЛП(Товар) = "" Тогда
			Продолжить;
		КонецЕсли; 
		
		Для Кол = 4 По ВсегоКолонок Цикл
			
			КПП			= Формат(XLS.ЗначениеЯчейки(1,3,Кол), "ЧГ=0");
			Количество	= XLS.ЗначениеЯчейки(1,Стр,Кол);
			
			Номенклатура = Номенклатура(Товар);

			НовСтр = ДеревоЗаказа.Добавить();
			НовСтр.КонтрагентНаименование = КПП;
			НовСтр.Контрагент			  = ПолучитьКонтрагента(ИНН,КПП);
			НовСтр.НоменклатураНаименование = Товар;
			НовСтр.Номенклатура			  = Номенклатура;
			НовСтр.Количество = Количество;
		КонецЦикла; 
		
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Функция СохранитьВК()
	ОбъектВК = РеквизитФормыВЗначение("Объект");
	ВкФайл = ОбъектВК.ПолучитьМакет("ExcelNative");
	ВКФайл.Записать(КаталогВременныхФайлов()+"ExcelNative.dll");	
	Возврат КаталогВременныхФайлов()+"ExcelNative.dll";
КонецФункции

&НаСервере
Функция Номенклатура(Товар)
	СпрНом = Справочники.Номенклатура.НайтиПоНаименованию(Товар);
	
	Если СпрНом.Пустая() Тогда
		СпрНом = Справочники.Номенклатура.СоздатьЭлемент();
		СпрНом.Наименование = Товар;
		СпрНом.Записать();
	КонецЕсли; 
	
	Возврат СпрНом;
КонецФункции

&НаСервереБезКонтекста
// Описание: // *ММГ 25.05.2017   
// Параметры:
Функция ПолучитьКонтрагента(ИНН,КПП)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Контрагенты.Ссылка
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.ИНН = &ИНН
		|	И Контрагенты.КПП = &КПП";
	
	Запрос.УстановитьПараметр("ИНН", ИНН);
	Запрос.УстановитьПараметр("КПП", КПП);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Справочники.Контрагенты.ПустаяСсылка();
	Иначе
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	КонецЕсли; 

КонецФункции // *ПолучитьКонтрагента(ИНН,КПП)

&НаКлиенте
Процедура СоздатьДокументы(Команда)
	СоздатьДокументыНаСервере();
КонецПроцедуры

&НаСервере
// Описание: // *ММГ 25.05.2017   
// Параметры:
Процедура СоздатьДокументыНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТчДерево.Контрагент КАК Контрагент,
	|	ТчДерево.Номенклатура,
	|	ТчДерево.Количество
	|ПОМЕСТИТЬ ВтДанные
	|ИЗ
	|	&ТчДерево КАК ТчДерево
	|ГДЕ
	|	ТчДерево.Контрагент <> &Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтДанные.Контрагент КАК Контрагент,
	|	ВтДанные.Номенклатура,
	|	ВтДанные.Количество
	|ИЗ
	|	ВтДанные КАК ВтДанные
	|ИТОГИ ПО
	|	Контрагент";
	Запрос.УстановитьПараметр("ТчДерево",ДеревоЗаказа.Выгрузить());
	Запрос.УстановитьПараметр("Контрагент",Справочники.Контрагенты.ПустаяСсылка());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаПоКонтрагенту = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаПоКонтрагенту.Следующий() Цикл
		Документ = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
		Документ.Дата = ТекущаяДата();
		Документ.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Товары;
		Документ.ВалютаДокумента = Константы.ВалютаРегламентированногоУчета.Получить();
		Документ.КратностьВзаиморасчетов = 1;
		Документ.КурсВзаиморасчетов = 1;
		Документ.СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.Автоматически;
		
		Документ.Организация = Организация;
		Документ.Контрагент = ВыборкаПоКонтрагенту.Контрагент;
		Документ.ДоговорКонтрагента = ПолучитьДоговорКонтрагента(ВыборкаПоКонтрагенту.Контрагент,Организация);

		
		ВыборкаНоменклатуры = ВыборкаПоКонтрагенту.Выбрать();
		
		Пока ВыборкаНоменклатуры.Следующий() Цикл
			НовСтр = Документ.Товары.Добавить();
			НовСтр.Номенклатура = ВыборкаНоменклатуры.Номенклатура;
			НовСтр.Количество   = ВыборкаНоменклатуры.Количество;
			
		КонецЦикла; 
		
		Документы.РеализацияТоваровУслуг.ЗаполнитьСчетаУчетаРасчетов(Документ);
		Документы.РеализацияТоваровУслуг.ЗаполнитьСчетаУчетаВТабличнойЧасти(Документ, "Товары");

		Документ.Записать();
	КонецЦикла; 
	
КонецПроцедуры // *

&НаСервереБезКонтекста
// Описание: //*ММГ 25.05.2017
// Параметры:
// Возвращаемое значение:
Функция ПолучитьДоговорКонтрагента(Контрагент,Организация)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОсновныеДоговорыКонтрагента.Договор
		|ИЗ
		|	РегистрСведений.ОсновныеДоговорыКонтрагента КАК ОсновныеДоговорыКонтрагента
		|ГДЕ
		|	ОсновныеДоговорыКонтрагента.Организация = &Организация
		|	И ОсновныеДоговорыКонтрагента.Контрагент = &Контрагент
		|	И ОсновныеДоговорыКонтрагента.ВидДоговора = &ВидДоговора";
	
	Запрос.УстановитьПараметр("ВидДоговора", Перечисления.ВидыДоговоровКонтрагентов.СПокупателем);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
	Иначе
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		Возврат ВыборкаДетальныеЗаписи.Договор;
	КонецЕсли; 

    
КонецФункции // *ПолучитьДоговорКонтрагента(ВыборкаПоКонтрагенту.Контрагент)



